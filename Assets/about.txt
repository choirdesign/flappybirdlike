ライフ制にして、木に接触したら一定時間点滅して木をすり抜ける
ライフは一定時間ごとに回復（時間かスコア
タイトルにハイスコアを表示
スタート前のカウントダウン
ポーズ機能もいれなきゃ(timescale?


スプライトのSprite Renderer、 SortingLayerは下にある方を優先して表示する

http://hiyotama.hatenablog.com/entry/2015/05/13/080000

重力はRigidBodyでいじれる

IEnumerator = I列挙子
さて、Unityにはコルーチンの仕組みが標準搭載されています。
コルーチンを使うと、
「処理１」→「一定時間待つ」→「処理２」→「一定時間待つ」→「処理３」
のような一連の処理を１つの関数で直感的に書けます。

まずはStartメソッド内でStartCoroutineというメソッドが実行され、更に別のメソッド(MoveMap、SetTree)を呼び出しております〜
StartCoroutineで呼び出されるメソッドの戻り値は、「IEnumerator」という型を使うルールになっております〜
普通にメソッドを呼び出すのではなくコルーチンという機能を使ってメソッドを呼び出す利点は、「◯秒経ってから実行」という処理を実装できる点です〜

コルーチンの真価は、その処理の途中で、一定時間中断することができるところです。
コルーチンの途中で次のように書くことで、処理が一時中断され、一定時間経過すると次の行から処理が再開します。
yield return new WaitForSeconds (秒数);

IEnumeratorにもprivateとかつけれる

「transform.parent」で親オブジェクトを指定することができます〜

yieldを使った記述は、コルーチンの中でしかできません！時間差処理を行いたい時はこのように実装すると覚えておくと、いいと思います〜

ボタン Spriteのサイズは4の倍数にしておかないと警告が出てしまうので、ご注意下さい〜

ボタン　トランジションをsprite swapに切り替える

private Animator anim;	//Animator変数